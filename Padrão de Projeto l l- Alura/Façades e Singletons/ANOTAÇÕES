FAÇADE: DAR UMA INTERFACE UNICA PARA TODOS QUE QUISEREM CONSUMIR O NOSSO SITEMA.
Uma façade serve como uma frente única para os serviços disponibilizados por um ou mais sub-sistemas, provendo uma maneira mais simples para o seu consumo.




SINGLETON: TER APENAS UMA INSTÂNCIA NO SISTEMA.
O Singleton nos ajuda a ter uma única instância do objeto ao longo do sistema.
O Singleton possibilita que o usuário crie uma instância global para determinado objeto. Isso pode ser interessante, mas tem problemas similares ao de variáveis globais no mundo procedural, afinal o objeto é único e disponível para todos.

Se não usar com parcimônia, o seu código sofrerá problemas de manutenção.




Façade x Adapter:
O Façade cria uma interface amigável para que clientes consigam consumir sub-sistemas (ou serviços).

Já o Adapter tem um propósito diferente. Ele visa adaptar um conjunto de classes que já existem, para uma outra interface, que é a requerida pelo outro sistema.



QUANDO USAR ? 

O QUE FAZ ?

